{
  "{\"sourceRoot\":\"/Users/jolir/Documents/test/vuetesting/test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/jolir/Documents/test/vuetesting\",\"filename\":\"/Users/jolir/Documents/test/vuetesting/test/Playground.test.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/jolir/Documents/test/vuetesting\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/jolir/Documents/test/vuetesting/test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/jolir/Documents/test/vuetesting",
      "filename": "/Users/jolir/Documents/test/vuetesting/test/Playground.test.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/jolir/Documents/test/vuetesting",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/jolir/Documents/test/vuetesting/test/Playground.test.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/jolir/Documents/test/vuetesting/test/Playground.test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/jolir/Documents/test/vuetesting/test",
        "sourceFileName": "Playground.test.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _chai = require(\"chai\");\n\nvar _Playground = _interopRequireDefault(require(\"../Playground\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _require = require('jsdom'),\n    JSDOM = _require.JSDOM;\n\nvar jsdom = new JSDOM('<!doctype html><html><body></body></html>');\nvar window = jsdom.window;\nglobal.$ = require('jquery')(window);\ndescribe('Playground', function () {\n  it('Character should move to the left!', function () {\n    // expect(Playground.ALIVE).to.equal(1);\n    var b = new _Playground[\"default\"]('ch2'); //create a new playGround and pass the id where the first character will be displayed\n\n    setInterval(function () {\n      b.mainLoop();\n    }, 200); //store where the character is now\n\n    var orig_coordinate = {\n      x: b.chr1.ch_x,\n      y: b.chr1.ch_y\n    };\n    var e = $.Event(\"keydown\", {\n      keyCode: 37\n    });\n    $(\"body\").trigger(e);\n    setTimeout(function () {\n      //store where the character is now\n      var new_coordinate = {\n        x: b.chr1.ch_x,\n        y: b.chr1.ch_y\n      }; // console.log(orig_coordinate, new_coordinate);\n      //did the character move to the left?\n\n      (0, _chai.expect)(orig_coordinate.x).to.be.greaterThan(new_coordinate.x);\n      (0, _chai.expect)(orig_coordinate.y).to.be.equal(new_coordinate.y);\n    }, 1000);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlBsYXlncm91bmQudGVzdC5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiSlNET00iLCJqc2RvbSIsIndpbmRvdyIsImdsb2JhbCIsIiQiLCJkZXNjcmliZSIsIml0IiwiYiIsIlBsYXlncm91bmQiLCJzZXRJbnRlcnZhbCIsIm1haW5Mb29wIiwib3JpZ19jb29yZGluYXRlIiwieCIsImNocjEiLCJjaF94IiwieSIsImNoX3kiLCJlIiwiRXZlbnQiLCJrZXlDb2RlIiwidHJpZ2dlciIsInNldFRpbWVvdXQiLCJuZXdfY29vcmRpbmF0ZSIsInRvIiwiYmUiLCJncmVhdGVyVGhhbiIsImVxdWFsIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQU9BOzs7O2VBTmtCQSxPQUFPLENBQUMsT0FBRCxDO0lBQWpCQyxLLFlBQUFBLEs7O0FBQ1IsSUFBTUMsS0FBSyxHQUFHLElBQUlELEtBQUosQ0FBVSwyQ0FBVixDQUFkO0lBQ1FFLE0sR0FBV0QsSyxDQUFYQyxNO0FBQ1JDLE1BQU0sQ0FBQ0MsQ0FBUCxHQUFXTCxPQUFPLENBQUMsUUFBRCxDQUFQLENBQWtCRyxNQUFsQixDQUFYO0FBS0FHLFFBQVEsQ0FBQyxZQUFELEVBQWUsWUFBTTtBQUM1QkMsRUFBQUEsRUFBRSxDQUFDLG9DQUFELEVBQXVDLFlBQU07QUFDOUM7QUFDQSxRQUFJQyxDQUFDLEdBQUcsSUFBSUMsc0JBQUosQ0FBZSxLQUFmLENBQVIsQ0FGOEMsQ0FFZjs7QUFDL0JDLElBQUFBLFdBQVcsQ0FBQyxZQUFVO0FBQUVGLE1BQUFBLENBQUMsQ0FBQ0csUUFBRjtBQUFlLEtBQTVCLEVBQThCLEdBQTlCLENBQVgsQ0FIOEMsQ0FNOUM7O0FBQ0EsUUFBSUMsZUFBZSxHQUFHO0FBQUVDLE1BQUFBLENBQUMsRUFBRUwsQ0FBQyxDQUFDTSxJQUFGLENBQU9DLElBQVo7QUFBa0JDLE1BQUFBLENBQUMsRUFBRVIsQ0FBQyxDQUFDTSxJQUFGLENBQU9HO0FBQTVCLEtBQXRCO0FBQ0EsUUFBSUMsQ0FBQyxHQUFHYixDQUFDLENBQUNjLEtBQUYsQ0FBUyxTQUFULEVBQW9CO0FBQUVDLE1BQUFBLE9BQU8sRUFBRTtBQUFYLEtBQXBCLENBQVI7QUFDQWYsSUFBQUEsQ0FBQyxDQUFFLE1BQUYsQ0FBRCxDQUFZZ0IsT0FBWixDQUFxQkgsQ0FBckI7QUFFQUksSUFBQUEsVUFBVSxDQUFDLFlBQVU7QUFDcEI7QUFDQSxVQUFJQyxjQUFjLEdBQUc7QUFBRVYsUUFBQUEsQ0FBQyxFQUFFTCxDQUFDLENBQUNNLElBQUYsQ0FBT0MsSUFBWjtBQUFrQkMsUUFBQUEsQ0FBQyxFQUFFUixDQUFDLENBQUNNLElBQUYsQ0FBT0c7QUFBNUIsT0FBckIsQ0FGb0IsQ0FHcEI7QUFFQTs7QUFDQSx3QkFBT0wsZUFBZSxDQUFDQyxDQUF2QixFQUEwQlcsRUFBMUIsQ0FBNkJDLEVBQTdCLENBQWdDQyxXQUFoQyxDQUE0Q0gsY0FBYyxDQUFDVixDQUEzRDtBQUNBLHdCQUFPRCxlQUFlLENBQUNJLENBQXZCLEVBQTBCUSxFQUExQixDQUE2QkMsRUFBN0IsQ0FBZ0NFLEtBQWhDLENBQXNDSixjQUFjLENBQUNQLENBQXJEO0FBQ0EsS0FSUyxFQVFQLElBUk8sQ0FBVjtBQVNBLEdBcEJDLENBQUY7QUFxQkEsQ0F0Qk8sQ0FBUiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvam9saXIvRG9jdW1lbnRzL3Rlc3QvdnVldGVzdGluZy90ZXN0Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZXhwZWN0IH0gZnJvbSAnY2hhaSc7XG5jb25zdCB7IEpTRE9NIH0gPSByZXF1aXJlKCdqc2RvbScpO1xuY29uc3QganNkb20gPSBuZXcgSlNET00oJzwhZG9jdHlwZSBodG1sPjxodG1sPjxib2R5PjwvYm9keT48L2h0bWw+Jyk7XG5jb25zdCB7IHdpbmRvdyB9ID0ganNkb207XG5nbG9iYWwuJCA9IHJlcXVpcmUoJ2pxdWVyeScpKHdpbmRvdyk7XG5cblxuaW1wb3J0IFBsYXlncm91bmQgZnJvbSAnLi4vUGxheWdyb3VuZCc7XG5cbmRlc2NyaWJlKCdQbGF5Z3JvdW5kJywgKCkgPT4ge1xuXHRpdCgnQ2hhcmFjdGVyIHNob3VsZCBtb3ZlIHRvIHRoZSBsZWZ0IScsICgpID0+IHtcblx0XHQvLyBleHBlY3QoUGxheWdyb3VuZC5BTElWRSkudG8uZXF1YWwoMSk7XG5cdFx0bGV0IGIgPSBuZXcgUGxheWdyb3VuZCgnY2gyJyk7XHQvL2NyZWF0ZSBhIG5ldyBwbGF5R3JvdW5kIGFuZCBwYXNzIHRoZSBpZCB3aGVyZSB0aGUgZmlyc3QgY2hhcmFjdGVyIHdpbGwgYmUgZGlzcGxheWVkXG5cdFx0c2V0SW50ZXJ2YWwoZnVuY3Rpb24oKXsgYi5tYWluTG9vcCgpOyB9LCAyMDApO1xuXG5cblx0XHQvL3N0b3JlIHdoZXJlIHRoZSBjaGFyYWN0ZXIgaXMgbm93XG5cdFx0bGV0IG9yaWdfY29vcmRpbmF0ZSA9IHsgeDogYi5jaHIxLmNoX3gsIHk6IGIuY2hyMS5jaF95IH07XG5cdFx0dmFyIGUgPSAkLkV2ZW50KCBcImtleWRvd25cIiwgeyBrZXlDb2RlOiAzNyB9ICk7XG5cdFx0JCggXCJib2R5XCIgKS50cmlnZ2VyKCBlICk7XG5cblx0XHRzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XG5cdFx0XHQvL3N0b3JlIHdoZXJlIHRoZSBjaGFyYWN0ZXIgaXMgbm93XG5cdFx0XHRsZXQgbmV3X2Nvb3JkaW5hdGUgPSB7IHg6IGIuY2hyMS5jaF94LCB5OiBiLmNocjEuY2hfeSB9O1xuXHRcdFx0Ly8gY29uc29sZS5sb2cob3JpZ19jb29yZGluYXRlLCBuZXdfY29vcmRpbmF0ZSk7XG5cblx0XHRcdC8vZGlkIHRoZSBjaGFyYWN0ZXIgbW92ZSB0byB0aGUgbGVmdD9cblx0XHRcdGV4cGVjdChvcmlnX2Nvb3JkaW5hdGUueCkudG8uYmUuZ3JlYXRlclRoYW4obmV3X2Nvb3JkaW5hdGUueCk7XG5cdFx0XHRleHBlY3Qob3JpZ19jb29yZGluYXRlLnkpLnRvLmJlLmVxdWFsKG5ld19jb29yZGluYXRlLnkpO1xuXHRcdH0sIDEwMDApO1xuXHR9KTtcbn0pOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Playground.test.js"
      ],
      "names": [
        "require",
        "JSDOM",
        "jsdom",
        "window",
        "global",
        "$",
        "describe",
        "it",
        "b",
        "Playground",
        "setInterval",
        "mainLoop",
        "orig_coordinate",
        "x",
        "chr1",
        "ch_x",
        "y",
        "ch_y",
        "e",
        "Event",
        "keyCode",
        "trigger",
        "setTimeout",
        "new_coordinate",
        "to",
        "be",
        "greaterThan",
        "equal"
      ],
      "mappings": ";;AAAA;;AAOA;;;;eANkBA,OAAO,CAAC,OAAD,C;IAAjBC,K,YAAAA,K;;AACR,IAAMC,KAAK,GAAG,IAAID,KAAJ,CAAU,2CAAV,CAAd;IACQE,M,GAAWD,K,CAAXC,M;AACRC,MAAM,CAACC,CAAP,GAAWL,OAAO,CAAC,QAAD,CAAP,CAAkBG,MAAlB,CAAX;AAKAG,QAAQ,CAAC,YAAD,EAAe,YAAM;AAC5BC,EAAAA,EAAE,CAAC,oCAAD,EAAuC,YAAM;AAC9C;AACA,QAAIC,CAAC,GAAG,IAAIC,sBAAJ,CAAe,KAAf,CAAR,CAF8C,CAEf;;AAC/BC,IAAAA,WAAW,CAAC,YAAU;AAAEF,MAAAA,CAAC,CAACG,QAAF;AAAe,KAA5B,EAA8B,GAA9B,CAAX,CAH8C,CAM9C;;AACA,QAAIC,eAAe,GAAG;AAAEC,MAAAA,CAAC,EAAEL,CAAC,CAACM,IAAF,CAAOC,IAAZ;AAAkBC,MAAAA,CAAC,EAAER,CAAC,CAACM,IAAF,CAAOG;AAA5B,KAAtB;AACA,QAAIC,CAAC,GAAGb,CAAC,CAACc,KAAF,CAAS,SAAT,EAAoB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAApB,CAAR;AACAf,IAAAA,CAAC,CAAE,MAAF,CAAD,CAAYgB,OAAZ,CAAqBH,CAArB;AAEAI,IAAAA,UAAU,CAAC,YAAU;AACpB;AACA,UAAIC,cAAc,GAAG;AAAEV,QAAAA,CAAC,EAAEL,CAAC,CAACM,IAAF,CAAOC,IAAZ;AAAkBC,QAAAA,CAAC,EAAER,CAAC,CAACM,IAAF,CAAOG;AAA5B,OAArB,CAFoB,CAGpB;AAEA;;AACA,wBAAOL,eAAe,CAACC,CAAvB,EAA0BW,EAA1B,CAA6BC,EAA7B,CAAgCC,WAAhC,CAA4CH,cAAc,CAACV,CAA3D;AACA,wBAAOD,eAAe,CAACI,CAAvB,EAA0BQ,EAA1B,CAA6BC,EAA7B,CAAgCE,KAAhC,CAAsCJ,cAAc,CAACP,CAArD;AACA,KARS,EAQP,IARO,CAAV;AASA,GApBC,CAAF;AAqBA,CAtBO,CAAR",
      "sourceRoot": "/Users/jolir/Documents/test/vuetesting/test",
      "sourcesContent": [
        "import { expect } from 'chai';\nconst { JSDOM } = require('jsdom');\nconst jsdom = new JSDOM('<!doctype html><html><body></body></html>');\nconst { window } = jsdom;\nglobal.$ = require('jquery')(window);\n\n\nimport Playground from '../Playground';\n\ndescribe('Playground', () => {\n\tit('Character should move to the left!', () => {\n\t\t// expect(Playground.ALIVE).to.equal(1);\n\t\tlet b = new Playground('ch2');\t//create a new playGround and pass the id where the first character will be displayed\n\t\tsetInterval(function(){ b.mainLoop(); }, 200);\n\n\n\t\t//store where the character is now\n\t\tlet orig_coordinate = { x: b.chr1.ch_x, y: b.chr1.ch_y };\n\t\tvar e = $.Event( \"keydown\", { keyCode: 37 } );\n\t\t$( \"body\" ).trigger( e );\n\n\t\tsetTimeout(function(){\n\t\t\t//store where the character is now\n\t\t\tlet new_coordinate = { x: b.chr1.ch_x, y: b.chr1.ch_y };\n\t\t\t// console.log(orig_coordinate, new_coordinate);\n\n\t\t\t//did the character move to the left?\n\t\t\texpect(orig_coordinate.x).to.be.greaterThan(new_coordinate.x);\n\t\t\texpect(orig_coordinate.y).to.be.equal(new_coordinate.y);\n\t\t}, 1000);\n\t});\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1580983538000
  },
  "{\"sourceRoot\":\"/Users/jolir/Documents/test/vuetesting\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/jolir/Documents/test/vuetesting\",\"filename\":\"/Users/jolir/Documents/test/vuetesting/Playground.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/jolir/Documents/test/vuetesting\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/jolir/Documents/test/vuetesting",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/jolir/Documents/test/vuetesting",
      "filename": "/Users/jolir/Documents/test/vuetesting/Playground.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/jolir/Documents/test/vuetesting",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/jolir/Documents/test/vuetesting/Playground.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/jolir/Documents/test/vuetesting/Playground.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/jolir/Documents/test/vuetesting",
        "sourceFileName": "Playground.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _Character = _interopRequireDefault(require(\"./Character\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n// const Character = require('./Character');\nvar _require = require('jsdom'),\n    JSDOM = _require.JSDOM;\n\nvar jsdom = new JSDOM('<!doctype html><html><body></body></html>');\nvar window = jsdom.window;\nglobal.$ = require('jquery')(window);\n\nvar Playground =\n/*#__PURE__*/\nfunction () {\n  function Playground(selector_ch1) {\n    _classCallCheck(this, Playground);\n\n    //create the first character\n    var chr1 = new _Character[\"default\"](selector_ch1);\n    $('body').keydown(function (e) {\n      //if the user pressed 'D'\n      if (e.keyCode == 39) {\n        chr1.updateAction(\"WALK_RIGHT\");\n      } else if (e.keyCode == 37) {\n        chr1.updateAction(\"WALK_LEFT\");\n      } else if (e.keyCode == 40) {\n        chr1.updateAction(\"KNEEL\");\n      } else if (e.keyCode == 65) {\n        chr1.updateAction(\"PUNCH\");\n      } else if (e.keyCode == 83) {\n        chr1.updateAction(\"KICK\");\n      } else if (e.keyCode == 68) {\n        chr1.updateAction(\"BEAM\");\n      } else if (e.keyCode == 70) {\n        chr1.updateAction(\"ROUND_HOUSE\");\n      }\n    });\n    this.chr1 = chr1;\n  }\n\n  _createClass(Playground, [{\n    key: \"mainLoop\",\n    value: function mainLoop() {\n      this.chr1.drawCharacter();\n    }\n  }]);\n\n  return Playground;\n}(); //end of PlayGround class\n\n\nexports[\"default\"] = Playground;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlBsYXlncm91bmQuanMiXSwibmFtZXMiOlsicmVxdWlyZSIsIkpTRE9NIiwianNkb20iLCJ3aW5kb3ciLCJnbG9iYWwiLCIkIiwiUGxheWdyb3VuZCIsInNlbGVjdG9yX2NoMSIsImNocjEiLCJDaGFyYWN0ZXIiLCJrZXlkb3duIiwiZSIsImtleUNvZGUiLCJ1cGRhdGVBY3Rpb24iLCJkcmF3Q2hhcmFjdGVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBS0E7Ozs7Ozs7Ozs7QUFMQTtlQUNrQkEsT0FBTyxDQUFDLE9BQUQsQztJQUFqQkMsSyxZQUFBQSxLOztBQUNSLElBQU1DLEtBQUssR0FBRyxJQUFJRCxLQUFKLENBQVUsMkNBQVYsQ0FBZDtJQUNRRSxNLEdBQVdELEssQ0FBWEMsTTtBQUNSQyxNQUFNLENBQUNDLENBQVAsR0FBV0wsT0FBTyxDQUFDLFFBQUQsQ0FBUCxDQUFrQkcsTUFBbEIsQ0FBWDs7SUFJcUJHLFU7OztBQUVwQixzQkFBWUMsWUFBWixFQUNBO0FBQUE7O0FBQ0M7QUFDQSxRQUFJQyxJQUFJLEdBQUcsSUFBSUMscUJBQUosQ0FBY0YsWUFBZCxDQUFYO0FBRUFGLElBQUFBLENBQUMsQ0FBQyxNQUFELENBQUQsQ0FBVUssT0FBVixDQUFrQixVQUFTQyxDQUFULEVBQVk7QUFFN0I7QUFDQSxVQUFHQSxDQUFDLENBQUNDLE9BQUYsSUFBYSxFQUFoQixFQUFvQjtBQUNuQkosUUFBQUEsSUFBSSxDQUFDSyxZQUFMLENBQWtCLFlBQWxCO0FBQ0EsT0FGRCxNQUdLLElBQUdGLENBQUMsQ0FBQ0MsT0FBRixJQUFhLEVBQWhCLEVBQW9CO0FBQ3hCSixRQUFBQSxJQUFJLENBQUNLLFlBQUwsQ0FBa0IsV0FBbEI7QUFDQSxPQUZJLE1BR0EsSUFBR0YsQ0FBQyxDQUFDQyxPQUFGLElBQWEsRUFBaEIsRUFBb0I7QUFDeEJKLFFBQUFBLElBQUksQ0FBQ0ssWUFBTCxDQUFrQixPQUFsQjtBQUNBLE9BRkksTUFHQSxJQUFHRixDQUFDLENBQUNDLE9BQUYsSUFBYSxFQUFoQixFQUFvQjtBQUN4QkosUUFBQUEsSUFBSSxDQUFDSyxZQUFMLENBQWtCLE9BQWxCO0FBQ0EsT0FGSSxNQUdBLElBQUdGLENBQUMsQ0FBQ0MsT0FBRixJQUFhLEVBQWhCLEVBQW9CO0FBQ3hCSixRQUFBQSxJQUFJLENBQUNLLFlBQUwsQ0FBa0IsTUFBbEI7QUFDQSxPQUZJLE1BR0EsSUFBR0YsQ0FBQyxDQUFDQyxPQUFGLElBQWEsRUFBaEIsRUFBb0I7QUFDeEJKLFFBQUFBLElBQUksQ0FBQ0ssWUFBTCxDQUFrQixNQUFsQjtBQUNBLE9BRkksTUFHQSxJQUFHRixDQUFDLENBQUNDLE9BQUYsSUFBYSxFQUFoQixFQUFvQjtBQUN4QkosUUFBQUEsSUFBSSxDQUFDSyxZQUFMLENBQWtCLGFBQWxCO0FBQ0E7QUFDRCxLQXhCRDtBQTBCQSxTQUFLTCxJQUFMLEdBQVlBLElBQVo7QUFDQTs7OzsrQkFHRDtBQUNDLFdBQUtBLElBQUwsQ0FBVU0sYUFBVjtBQUNBOzs7O0tBRUEiLCJzb3VyY2VSb290IjoiL1VzZXJzL2pvbGlyL0RvY3VtZW50cy90ZXN0L3Z1ZXRlc3RpbmciLCJzb3VyY2VzQ29udGVudCI6WyIvLyBjb25zdCBDaGFyYWN0ZXIgPSByZXF1aXJlKCcuL0NoYXJhY3RlcicpO1xuY29uc3QgeyBKU0RPTSB9ID0gcmVxdWlyZSgnanNkb20nKTtcbmNvbnN0IGpzZG9tID0gbmV3IEpTRE9NKCc8IWRvY3R5cGUgaHRtbD48aHRtbD48Ym9keT48L2JvZHk+PC9odG1sPicpO1xuY29uc3QgeyB3aW5kb3cgfSA9IGpzZG9tO1xuZ2xvYmFsLiQgPSByZXF1aXJlKCdqcXVlcnknKSh3aW5kb3cpO1xuaW1wb3J0IENoYXJhY3RlciBmcm9tICcuL0NoYXJhY3Rlcic7XG5cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUGxheWdyb3VuZCBcbntcdFxuXHRjb25zdHJ1Y3RvcihzZWxlY3Rvcl9jaDEpIFxuXHR7XG5cdFx0Ly9jcmVhdGUgdGhlIGZpcnN0IGNoYXJhY3RlclxuXHRcdHZhciBjaHIxID0gbmV3IENoYXJhY3RlcihzZWxlY3Rvcl9jaDEpO1xuXHRcdFxuXHRcdCQoJ2JvZHknKS5rZXlkb3duKGZ1bmN0aW9uKGUpIHtcblxuXHRcdFx0Ly9pZiB0aGUgdXNlciBwcmVzc2VkICdEJ1xuXHRcdFx0aWYoZS5rZXlDb2RlID09IDM5KSB7XG5cdFx0XHRcdGNocjEudXBkYXRlQWN0aW9uKFwiV0FMS19SSUdIVFwiKTtcblx0XHRcdH1cblx0XHRcdGVsc2UgaWYoZS5rZXlDb2RlID09IDM3KSB7XG5cdFx0XHRcdGNocjEudXBkYXRlQWN0aW9uKFwiV0FMS19MRUZUXCIpO1xuXHRcdFx0fVxuXHRcdFx0ZWxzZSBpZihlLmtleUNvZGUgPT0gNDApIHtcblx0XHRcdFx0Y2hyMS51cGRhdGVBY3Rpb24oXCJLTkVFTFwiKTtcblx0XHRcdH1cblx0XHRcdGVsc2UgaWYoZS5rZXlDb2RlID09IDY1KSB7XG5cdFx0XHRcdGNocjEudXBkYXRlQWN0aW9uKFwiUFVOQ0hcIik7XG5cdFx0XHR9XG5cdFx0XHRlbHNlIGlmKGUua2V5Q29kZSA9PSA4Mykge1xuXHRcdFx0XHRjaHIxLnVwZGF0ZUFjdGlvbihcIktJQ0tcIik7XG5cdFx0XHR9XG5cdFx0XHRlbHNlIGlmKGUua2V5Q29kZSA9PSA2OCkge1xuXHRcdFx0XHRjaHIxLnVwZGF0ZUFjdGlvbihcIkJFQU1cIik7XG5cdFx0XHR9XG5cdFx0XHRlbHNlIGlmKGUua2V5Q29kZSA9PSA3MCkge1xuXHRcdFx0XHRjaHIxLnVwZGF0ZUFjdGlvbihcIlJPVU5EX0hPVVNFXCIpO1xuXHRcdFx0fVxuXHRcdH0pO1xuXG5cdFx0dGhpcy5jaHIxID0gY2hyMTtcblx0fVxuXG5cdG1haW5Mb29wKClcblx0e1xuXHRcdHRoaXMuY2hyMS5kcmF3Q2hhcmFjdGVyKCk7XG5cdH1cblx0XG59XHQvL2VuZCBvZiBQbGF5R3JvdW5kIGNsYXNzIl19",
    "map": {
      "version": 3,
      "sources": [
        "Playground.js"
      ],
      "names": [
        "require",
        "JSDOM",
        "jsdom",
        "window",
        "global",
        "$",
        "Playground",
        "selector_ch1",
        "chr1",
        "Character",
        "keydown",
        "e",
        "keyCode",
        "updateAction",
        "drawCharacter"
      ],
      "mappings": ";;;;;;;AAKA;;;;;;;;;;AALA;eACkBA,OAAO,CAAC,OAAD,C;IAAjBC,K,YAAAA,K;;AACR,IAAMC,KAAK,GAAG,IAAID,KAAJ,CAAU,2CAAV,CAAd;IACQE,M,GAAWD,K,CAAXC,M;AACRC,MAAM,CAACC,CAAP,GAAWL,OAAO,CAAC,QAAD,CAAP,CAAkBG,MAAlB,CAAX;;IAIqBG,U;;;AAEpB,sBAAYC,YAAZ,EACA;AAAA;;AACC;AACA,QAAIC,IAAI,GAAG,IAAIC,qBAAJ,CAAcF,YAAd,CAAX;AAEAF,IAAAA,CAAC,CAAC,MAAD,CAAD,CAAUK,OAAV,CAAkB,UAASC,CAAT,EAAY;AAE7B;AACA,UAAGA,CAAC,CAACC,OAAF,IAAa,EAAhB,EAAoB;AACnBJ,QAAAA,IAAI,CAACK,YAAL,CAAkB,YAAlB;AACA,OAFD,MAGK,IAAGF,CAAC,CAACC,OAAF,IAAa,EAAhB,EAAoB;AACxBJ,QAAAA,IAAI,CAACK,YAAL,CAAkB,WAAlB;AACA,OAFI,MAGA,IAAGF,CAAC,CAACC,OAAF,IAAa,EAAhB,EAAoB;AACxBJ,QAAAA,IAAI,CAACK,YAAL,CAAkB,OAAlB;AACA,OAFI,MAGA,IAAGF,CAAC,CAACC,OAAF,IAAa,EAAhB,EAAoB;AACxBJ,QAAAA,IAAI,CAACK,YAAL,CAAkB,OAAlB;AACA,OAFI,MAGA,IAAGF,CAAC,CAACC,OAAF,IAAa,EAAhB,EAAoB;AACxBJ,QAAAA,IAAI,CAACK,YAAL,CAAkB,MAAlB;AACA,OAFI,MAGA,IAAGF,CAAC,CAACC,OAAF,IAAa,EAAhB,EAAoB;AACxBJ,QAAAA,IAAI,CAACK,YAAL,CAAkB,MAAlB;AACA,OAFI,MAGA,IAAGF,CAAC,CAACC,OAAF,IAAa,EAAhB,EAAoB;AACxBJ,QAAAA,IAAI,CAACK,YAAL,CAAkB,aAAlB;AACA;AACD,KAxBD;AA0BA,SAAKL,IAAL,GAAYA,IAAZ;AACA;;;;+BAGD;AACC,WAAKA,IAAL,CAAUM,aAAV;AACA;;;;KAEA",
      "sourceRoot": "/Users/jolir/Documents/test/vuetesting",
      "sourcesContent": [
        "// const Character = require('./Character');\nconst { JSDOM } = require('jsdom');\nconst jsdom = new JSDOM('<!doctype html><html><body></body></html>');\nconst { window } = jsdom;\nglobal.$ = require('jquery')(window);\nimport Character from './Character';\n\n\nexport default class Playground \n{\t\n\tconstructor(selector_ch1) \n\t{\n\t\t//create the first character\n\t\tvar chr1 = new Character(selector_ch1);\n\t\t\n\t\t$('body').keydown(function(e) {\n\n\t\t\t//if the user pressed 'D'\n\t\t\tif(e.keyCode == 39) {\n\t\t\t\tchr1.updateAction(\"WALK_RIGHT\");\n\t\t\t}\n\t\t\telse if(e.keyCode == 37) {\n\t\t\t\tchr1.updateAction(\"WALK_LEFT\");\n\t\t\t}\n\t\t\telse if(e.keyCode == 40) {\n\t\t\t\tchr1.updateAction(\"KNEEL\");\n\t\t\t}\n\t\t\telse if(e.keyCode == 65) {\n\t\t\t\tchr1.updateAction(\"PUNCH\");\n\t\t\t}\n\t\t\telse if(e.keyCode == 83) {\n\t\t\t\tchr1.updateAction(\"KICK\");\n\t\t\t}\n\t\t\telse if(e.keyCode == 68) {\n\t\t\t\tchr1.updateAction(\"BEAM\");\n\t\t\t}\n\t\t\telse if(e.keyCode == 70) {\n\t\t\t\tchr1.updateAction(\"ROUND_HOUSE\");\n\t\t\t}\n\t\t});\n\n\t\tthis.chr1 = chr1;\n\t}\n\n\tmainLoop()\n\t{\n\t\tthis.chr1.drawCharacter();\n\t}\n\t\n}\t//end of PlayGround class"
      ]
    },
    "sourceType": "script",
    "mtime": 1580983549000
  },
  "{\"sourceRoot\":\"/Users/jolir/Documents/test/vuetesting\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/jolir/Documents/test/vuetesting\",\"filename\":\"/Users/jolir/Documents/test/vuetesting/Character.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/jolir/Documents/test/vuetesting\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/jolir/Documents/test/vuetesting",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/jolir/Documents/test/vuetesting",
      "filename": "/Users/jolir/Documents/test/vuetesting/Character.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/jolir/Documents/test/vuetesting",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/jolir/Documents/test/vuetesting/Character.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/jolir/Documents/test/vuetesting/Character.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/jolir/Documents/test/vuetesting",
        "sourceFileName": "Character.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Character =\n/*#__PURE__*/\nfunction () {\n  function Character(selector) {\n    var _this$constants;\n\n    _classCallCheck(this, Character);\n\n    this.constants = (_this$constants = {\n      'STANDING': {\n        'y': 1,\n        'x': [0, 1, 2, 3]\n      },\n      'PUNCH': {\n        'y': 2,\n        'x': [0, 1, 2, 3]\n      },\n      'WALK_RIGHT': {\n        'y': 3,\n        'x': [0, 1, 2]\n      },\n      'WALK_LEFT': {\n        'y': 3,\n        'x': [2, 3, 4]\n      },\n      'KNEEL': {\n        'y': 9,\n        'x': [0]\n      },\n      'KICK': {\n        'y': 6,\n        'x': [0, 1, 2, 3, 4]\n      }\n    }, _defineProperty(_this$constants, \"PUNCH\", {\n      'y': 2,\n      'x': [0, 1, 2]\n    }), _defineProperty(_this$constants, 'BEAM', {\n      'y': 0,\n      'x': [0, 1, 2, 3]\n    }), _defineProperty(_this$constants, 'ROUND_HOUSE', {\n      'y': 7,\n      'x': [0, 1, 2, 3, 4]\n    }), _this$constants);\n    this.selector = selector; //store the html id of the character\n\n    this.counter = 0; //stores which sprite (in the x-direction) it should display \n\n    this.action = \"STANDING\"; //default action is for the character to stand\n\n    this.ch_x = 0; //x_coordinate of the character\n\n    this.ch_y = 0; //y_coordinate of the character\n    //ch_x, ch_y and action could really all be private variables and I could have just done var instead of this. but to make debuggin easier, I am making them an instance variable so that it would display when you log the chracter object\n  }\n\n  _createClass(Character, [{\n    key: \"drawSprite\",\n    value: function drawSprite(y, x) {\n      $('#' + this.selector).css('background', \"url('https://github.com/choi5983/street_fighter/blob/master/images/ken.png?raw=true') \" + x * -70 + \"px \" + -80 * y + \"px\").css('left', this.ch_x + \"px\");\n    } //updates the action\n\n  }, {\n    key: \"updateAction\",\n    value: function updateAction(action) {\n      this.counter = 0;\n      this.action = action;\n    } //updates the character's coordinates and changes the sprite's counter to simulate the character moving\n\n  }, {\n    key: \"updateCoordinate\",\n    value: function updateCoordinate() {\n      if (this.counter >= this.constants[this.action].x.length) {\n        this.counter = 0; //if action is anything other than 'STANDING' change the action back to 'STANDING'\n\n        this.action = 'STANDING';\n      }\n\n      if (this.action == 'WALK_LEFT') this.ch_x = this.ch_x - 10;else if (this.action == 'WALK_RIGHT') this.ch_x = this.ch_x + 10;\n    } //draws the character on the screen\n\n  }, {\n    key: \"drawCharacter\",\n    value: function drawCharacter() {\n      // console.log(\"drawing character\");\n      this.updateCoordinate();\n      this.drawSprite(this.constants[this.action].y, this.constants[this.action].x[this.counter++]);\n    }\n  }]);\n\n  return Character;\n}();\n\nexports[\"default\"] = Character;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNoYXJhY3Rlci5qcyJdLCJuYW1lcyI6WyJDaGFyYWN0ZXIiLCJzZWxlY3RvciIsImNvbnN0YW50cyIsImNvdW50ZXIiLCJhY3Rpb24iLCJjaF94IiwiY2hfeSIsInkiLCJ4IiwiJCIsImNzcyIsImxlbmd0aCIsInVwZGF0ZUNvb3JkaW5hdGUiLCJkcmF3U3ByaXRlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7SUFBcUJBLFM7OztBQUVwQixxQkFBWUMsUUFBWixFQUNBO0FBQUE7O0FBQUE7O0FBRUMsU0FBS0MsU0FBTDtBQUNDLGtCQUFhO0FBQUUsYUFBSyxDQUFQO0FBQVUsYUFBSyxDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxFQUFVLENBQVY7QUFBZixPQURkO0FBRUMsZUFBWTtBQUFFLGFBQUssQ0FBUDtBQUFVLGFBQUssQ0FBQyxDQUFELEVBQUksQ0FBSixFQUFPLENBQVAsRUFBVSxDQUFWO0FBQWYsT0FGYjtBQUdDLG9CQUFlO0FBQUUsYUFBSyxDQUFQO0FBQVUsYUFBSyxDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUDtBQUFmLE9BSGhCO0FBSUMsbUJBQWM7QUFBRSxhQUFLLENBQVA7QUFBVSxhQUFLLENBQUMsQ0FBRCxFQUFJLENBQUosRUFBTyxDQUFQO0FBQWYsT0FKZjtBQUtDLGVBQVc7QUFBRSxhQUFLLENBQVA7QUFBVSxhQUFLLENBQUMsQ0FBRDtBQUFmLE9BTFo7QUFNQyxjQUFVO0FBQUUsYUFBSyxDQUFQO0FBQVUsYUFBSyxDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxFQUFVLENBQVYsRUFBYSxDQUFiO0FBQWY7QUFOWCxpREFPWTtBQUFFLFdBQUssQ0FBUDtBQUFVLFdBQUssQ0FBQyxDQUFELEVBQUksQ0FBSixFQUFPLENBQVA7QUFBZixLQVBaLG9DQVFDLE1BUkQsRUFRVztBQUFFLFdBQUssQ0FBUDtBQUFVLFdBQUssQ0FBQyxDQUFELEVBQUksQ0FBSixFQUFPLENBQVAsRUFBVSxDQUFWO0FBQWYsS0FSWCxvQ0FTQyxhQVRELEVBU2lCO0FBQUUsV0FBSyxDQUFQO0FBQVUsV0FBSyxDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxFQUFVLENBQVYsRUFBYSxDQUFiO0FBQWYsS0FUakI7QUFZQSxTQUFLRCxRQUFMLEdBQWdCQSxRQUFoQixDQWRELENBYzJCOztBQUUxQixTQUFLRSxPQUFMLEdBQWUsQ0FBZixDQWhCRCxDQWdCcUI7O0FBQ3BCLFNBQUtDLE1BQUwsR0FBYyxVQUFkLENBakJELENBaUIyQjs7QUFDMUIsU0FBS0MsSUFBTCxHQUFVLENBQVYsQ0FsQkQsQ0FrQmtCOztBQUNqQixTQUFLQyxJQUFMLEdBQVUsQ0FBVixDQW5CRCxDQW1Ca0I7QUFDakI7QUFDQTs7OzsrQkFFVUMsQyxFQUFHQyxDLEVBQ2Q7QUFDQ0MsTUFBQUEsQ0FBQyxDQUFDLE1BQUksS0FBS1IsUUFBVixDQUFELENBQXFCUyxHQUFyQixDQUF5QixZQUF6QixFQUF1QywyRkFBeUZGLENBQUMsR0FBRSxDQUFDLEVBQTdGLEdBQWlHLEtBQWpHLEdBQXdHLENBQUMsRUFBRCxHQUFJRCxDQUE1RyxHQUErRyxJQUF0SixFQUE0SkcsR0FBNUosQ0FBZ0ssTUFBaEssRUFBd0ssS0FBS0wsSUFBTCxHQUFVLElBQWxMO0FBQ0EsSyxDQUVEOzs7O2lDQUNhRCxNLEVBQ2I7QUFDQyxXQUFLRCxPQUFMLEdBQWEsQ0FBYjtBQUNBLFdBQUtDLE1BQUwsR0FBY0EsTUFBZDtBQUNBLEssQ0FDRDs7Ozt1Q0FFQTtBQUNDLFVBQUcsS0FBS0QsT0FBTCxJQUFjLEtBQUtELFNBQUwsQ0FBZSxLQUFLRSxNQUFwQixFQUE0QkksQ0FBNUIsQ0FBOEJHLE1BQS9DLEVBQ0E7QUFDQyxhQUFLUixPQUFMLEdBQWEsQ0FBYixDQURELENBRUM7O0FBQ0EsYUFBS0MsTUFBTCxHQUFjLFVBQWQ7QUFDQTs7QUFFRCxVQUFHLEtBQUtBLE1BQUwsSUFBZSxXQUFsQixFQUNDLEtBQUtDLElBQUwsR0FBWSxLQUFLQSxJQUFMLEdBQVUsRUFBdEIsQ0FERCxLQUVLLElBQUcsS0FBS0QsTUFBTCxJQUFlLFlBQWxCLEVBQ0osS0FBS0MsSUFBTCxHQUFZLEtBQUtBLElBQUwsR0FBVSxFQUF0QjtBQUNELEssQ0FFRDs7OztvQ0FFQTtBQUNDO0FBQ0EsV0FBS08sZ0JBQUw7QUFDQSxXQUFLQyxVQUFMLENBQWdCLEtBQUtYLFNBQUwsQ0FBZSxLQUFLRSxNQUFwQixFQUE0QkcsQ0FBNUMsRUFBK0MsS0FBS0wsU0FBTCxDQUFlLEtBQUtFLE1BQXBCLEVBQTRCSSxDQUE1QixDQUE4QixLQUFLTCxPQUFMLEVBQTlCLENBQS9DO0FBQ0EiLCJzb3VyY2VSb290IjoiL1VzZXJzL2pvbGlyL0RvY3VtZW50cy90ZXN0L3Z1ZXRlc3RpbmciLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBDaGFyYWN0ZXIge1xuXG5cdGNvbnN0cnVjdG9yKHNlbGVjdG9yKSBcblx0e1xuXG5cdFx0dGhpcy5jb25zdGFudHMgPSB7XG5cdFx0XHQnU1RBTkRJTkcnOiBcdHsgJ3knOiAxLCAneCc6IFswLCAxLCAyLCAzXSB9LFxuXHRcdFx0J1BVTkNIJzogIFx0XHR7ICd5JzogMiwgJ3gnOiBbMCwgMSwgMiwgM10gfSxcblx0XHRcdCdXQUxLX1JJR0hUJzogXHR7ICd5JzogMywgJ3gnOiBbMCwgMSwgMl0gfSxcblx0XHRcdCdXQUxLX0xFRlQnOiBcdHsgJ3knOiAzLCAneCc6IFsyLCAzLCA0XSB9LFxuXHRcdFx0J0tORUVMJzogXHRcdHsgJ3knOiA5LCAneCc6IFswXSB9LFxuXHRcdFx0J0tJQ0snOiBcdFx0eyAneSc6IDYsICd4JzogWzAsIDEsIDIsIDMsIDRdIH0sXG5cdFx0XHQnUFVOQ0gnOiBcdFx0eyAneSc6IDIsICd4JzogWzAsIDEsIDJdIH0sXG5cdFx0XHQnQkVBTSc6IFx0XHR7ICd5JzogMCwgJ3gnOiBbMCwgMSwgMiwgM10gfSxcblx0XHRcdCdST1VORF9IT1VTRSc6IFx0eyAneSc6IDcsICd4JzogWzAsIDEsIDIsIDMsIDRdfVxuXHRcdH07XG5cblx0XHR0aGlzLnNlbGVjdG9yID0gc2VsZWN0b3I7IC8vc3RvcmUgdGhlIGh0bWwgaWQgb2YgdGhlIGNoYXJhY3RlclxuXG5cdFx0dGhpcy5jb3VudGVyID0gMDtcdFx0XHQvL3N0b3JlcyB3aGljaCBzcHJpdGUgKGluIHRoZSB4LWRpcmVjdGlvbikgaXQgc2hvdWxkIGRpc3BsYXkgXG5cdFx0dGhpcy5hY3Rpb24gPSBcIlNUQU5ESU5HXCI7XHQvL2RlZmF1bHQgYWN0aW9uIGlzIGZvciB0aGUgY2hhcmFjdGVyIHRvIHN0YW5kXG5cdFx0dGhpcy5jaF94PTA7XHRcdFx0XHRcdC8veF9jb29yZGluYXRlIG9mIHRoZSBjaGFyYWN0ZXJcblx0XHR0aGlzLmNoX3k9MDtcdFx0XHRcdFx0Ly95X2Nvb3JkaW5hdGUgb2YgdGhlIGNoYXJhY3RlclxuXHRcdC8vY2hfeCwgY2hfeSBhbmQgYWN0aW9uIGNvdWxkIHJlYWxseSBhbGwgYmUgcHJpdmF0ZSB2YXJpYWJsZXMgYW5kIEkgY291bGQgaGF2ZSBqdXN0IGRvbmUgdmFyIGluc3RlYWQgb2YgdGhpcy4gYnV0IHRvIG1ha2UgZGVidWdnaW4gZWFzaWVyLCBJIGFtIG1ha2luZyB0aGVtIGFuIGluc3RhbmNlIHZhcmlhYmxlIHNvIHRoYXQgaXQgd291bGQgZGlzcGxheSB3aGVuIHlvdSBsb2cgdGhlIGNocmFjdGVyIG9iamVjdFxuXHR9XG5cblx0ZHJhd1Nwcml0ZSh5LCB4KSBcblx0e1xuXHRcdCQoJyMnK3RoaXMuc2VsZWN0b3IpLmNzcygnYmFja2dyb3VuZCcsIFwidXJsKCdodHRwczovL2dpdGh1Yi5jb20vY2hvaTU5ODMvc3RyZWV0X2ZpZ2h0ZXIvYmxvYi9tYXN0ZXIvaW1hZ2VzL2tlbi5wbmc/cmF3PXRydWUnKSBcIit4KigtNzApK1wicHggXCIrKC04MCp5KStcInB4XCIpLmNzcygnbGVmdCcsIHRoaXMuY2hfeCtcInB4XCIpO1xuXHR9XG5cblx0Ly91cGRhdGVzIHRoZSBhY3Rpb25cblx0dXBkYXRlQWN0aW9uKGFjdGlvbikgXG5cdHtcblx0XHR0aGlzLmNvdW50ZXI9MDtcblx0XHR0aGlzLmFjdGlvbiA9IGFjdGlvbjtcblx0fVxuXHQvL3VwZGF0ZXMgdGhlIGNoYXJhY3RlcidzIGNvb3JkaW5hdGVzIGFuZCBjaGFuZ2VzIHRoZSBzcHJpdGUncyBjb3VudGVyIHRvIHNpbXVsYXRlIHRoZSBjaGFyYWN0ZXIgbW92aW5nXG5cdHVwZGF0ZUNvb3JkaW5hdGUoKSBcblx0e1xuXHRcdGlmKHRoaXMuY291bnRlcj49dGhpcy5jb25zdGFudHNbdGhpcy5hY3Rpb25dLngubGVuZ3RoKVxuXHRcdHtcblx0XHRcdHRoaXMuY291bnRlcj0wO1xuXHRcdFx0Ly9pZiBhY3Rpb24gaXMgYW55dGhpbmcgb3RoZXIgdGhhbiAnU1RBTkRJTkcnIGNoYW5nZSB0aGUgYWN0aW9uIGJhY2sgdG8gJ1NUQU5ESU5HJ1xuXHRcdFx0dGhpcy5hY3Rpb24gPSAnU1RBTkRJTkcnO1xuXHRcdH1cblxuXHRcdGlmKHRoaXMuYWN0aW9uID09ICdXQUxLX0xFRlQnKVxuXHRcdFx0dGhpcy5jaF94ID0gdGhpcy5jaF94LTEwO1xuXHRcdGVsc2UgaWYodGhpcy5hY3Rpb24gPT0gJ1dBTEtfUklHSFQnKVxuXHRcdFx0dGhpcy5jaF94ID0gdGhpcy5jaF94KzEwO1xuXHR9XG5cblx0Ly9kcmF3cyB0aGUgY2hhcmFjdGVyIG9uIHRoZSBzY3JlZW5cblx0ZHJhd0NoYXJhY3RlcigpXG5cdHtcblx0XHQvLyBjb25zb2xlLmxvZyhcImRyYXdpbmcgY2hhcmFjdGVyXCIpO1xuXHRcdHRoaXMudXBkYXRlQ29vcmRpbmF0ZSgpO1xuXHRcdHRoaXMuZHJhd1Nwcml0ZSh0aGlzLmNvbnN0YW50c1t0aGlzLmFjdGlvbl0ueSwgdGhpcy5jb25zdGFudHNbdGhpcy5hY3Rpb25dLnhbdGhpcy5jb3VudGVyKytdKTtcblx0fVxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Character.js"
      ],
      "names": [
        "Character",
        "selector",
        "constants",
        "counter",
        "action",
        "ch_x",
        "ch_y",
        "y",
        "x",
        "$",
        "css",
        "length",
        "updateCoordinate",
        "drawSprite"
      ],
      "mappings": ";;;;;;;;;;;;;;;IAAqBA,S;;;AAEpB,qBAAYC,QAAZ,EACA;AAAA;;AAAA;;AAEC,SAAKC,SAAL;AACC,kBAAa;AAAE,aAAK,CAAP;AAAU,aAAK,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV;AAAf,OADd;AAEC,eAAY;AAAE,aAAK,CAAP;AAAU,aAAK,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV;AAAf,OAFb;AAGC,oBAAe;AAAE,aAAK,CAAP;AAAU,aAAK,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AAAf,OAHhB;AAIC,mBAAc;AAAE,aAAK,CAAP;AAAU,aAAK,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AAAf,OAJf;AAKC,eAAW;AAAE,aAAK,CAAP;AAAU,aAAK,CAAC,CAAD;AAAf,OALZ;AAMC,cAAU;AAAE,aAAK,CAAP;AAAU,aAAK,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb;AAAf;AANX,iDAOY;AAAE,WAAK,CAAP;AAAU,WAAK,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AAAf,KAPZ,oCAQC,MARD,EAQW;AAAE,WAAK,CAAP;AAAU,WAAK,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV;AAAf,KARX,oCASC,aATD,EASiB;AAAE,WAAK,CAAP;AAAU,WAAK,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb;AAAf,KATjB;AAYA,SAAKD,QAAL,GAAgBA,QAAhB,CAdD,CAc2B;;AAE1B,SAAKE,OAAL,GAAe,CAAf,CAhBD,CAgBqB;;AACpB,SAAKC,MAAL,GAAc,UAAd,CAjBD,CAiB2B;;AAC1B,SAAKC,IAAL,GAAU,CAAV,CAlBD,CAkBkB;;AACjB,SAAKC,IAAL,GAAU,CAAV,CAnBD,CAmBkB;AACjB;AACA;;;;+BAEUC,C,EAAGC,C,EACd;AACCC,MAAAA,CAAC,CAAC,MAAI,KAAKR,QAAV,CAAD,CAAqBS,GAArB,CAAyB,YAAzB,EAAuC,2FAAyFF,CAAC,GAAE,CAAC,EAA7F,GAAiG,KAAjG,GAAwG,CAAC,EAAD,GAAID,CAA5G,GAA+G,IAAtJ,EAA4JG,GAA5J,CAAgK,MAAhK,EAAwK,KAAKL,IAAL,GAAU,IAAlL;AACA,K,CAED;;;;iCACaD,M,EACb;AACC,WAAKD,OAAL,GAAa,CAAb;AACA,WAAKC,MAAL,GAAcA,MAAd;AACA,K,CACD;;;;uCAEA;AACC,UAAG,KAAKD,OAAL,IAAc,KAAKD,SAAL,CAAe,KAAKE,MAApB,EAA4BI,CAA5B,CAA8BG,MAA/C,EACA;AACC,aAAKR,OAAL,GAAa,CAAb,CADD,CAEC;;AACA,aAAKC,MAAL,GAAc,UAAd;AACA;;AAED,UAAG,KAAKA,MAAL,IAAe,WAAlB,EACC,KAAKC,IAAL,GAAY,KAAKA,IAAL,GAAU,EAAtB,CADD,KAEK,IAAG,KAAKD,MAAL,IAAe,YAAlB,EACJ,KAAKC,IAAL,GAAY,KAAKA,IAAL,GAAU,EAAtB;AACD,K,CAED;;;;oCAEA;AACC;AACA,WAAKO,gBAAL;AACA,WAAKC,UAAL,CAAgB,KAAKX,SAAL,CAAe,KAAKE,MAApB,EAA4BG,CAA5C,EAA+C,KAAKL,SAAL,CAAe,KAAKE,MAApB,EAA4BI,CAA5B,CAA8B,KAAKL,OAAL,EAA9B,CAA/C;AACA",
      "sourceRoot": "/Users/jolir/Documents/test/vuetesting",
      "sourcesContent": [
        "export default class Character {\n\n\tconstructor(selector) \n\t{\n\n\t\tthis.constants = {\n\t\t\t'STANDING': \t{ 'y': 1, 'x': [0, 1, 2, 3] },\n\t\t\t'PUNCH':  \t\t{ 'y': 2, 'x': [0, 1, 2, 3] },\n\t\t\t'WALK_RIGHT': \t{ 'y': 3, 'x': [0, 1, 2] },\n\t\t\t'WALK_LEFT': \t{ 'y': 3, 'x': [2, 3, 4] },\n\t\t\t'KNEEL': \t\t{ 'y': 9, 'x': [0] },\n\t\t\t'KICK': \t\t{ 'y': 6, 'x': [0, 1, 2, 3, 4] },\n\t\t\t'PUNCH': \t\t{ 'y': 2, 'x': [0, 1, 2] },\n\t\t\t'BEAM': \t\t{ 'y': 0, 'x': [0, 1, 2, 3] },\n\t\t\t'ROUND_HOUSE': \t{ 'y': 7, 'x': [0, 1, 2, 3, 4]}\n\t\t};\n\n\t\tthis.selector = selector; //store the html id of the character\n\n\t\tthis.counter = 0;\t\t\t//stores which sprite (in the x-direction) it should display \n\t\tthis.action = \"STANDING\";\t//default action is for the character to stand\n\t\tthis.ch_x=0;\t\t\t\t\t//x_coordinate of the character\n\t\tthis.ch_y=0;\t\t\t\t\t//y_coordinate of the character\n\t\t//ch_x, ch_y and action could really all be private variables and I could have just done var instead of this. but to make debuggin easier, I am making them an instance variable so that it would display when you log the chracter object\n\t}\n\n\tdrawSprite(y, x) \n\t{\n\t\t$('#'+this.selector).css('background', \"url('https://github.com/choi5983/street_fighter/blob/master/images/ken.png?raw=true') \"+x*(-70)+\"px \"+(-80*y)+\"px\").css('left', this.ch_x+\"px\");\n\t}\n\n\t//updates the action\n\tupdateAction(action) \n\t{\n\t\tthis.counter=0;\n\t\tthis.action = action;\n\t}\n\t//updates the character's coordinates and changes the sprite's counter to simulate the character moving\n\tupdateCoordinate() \n\t{\n\t\tif(this.counter>=this.constants[this.action].x.length)\n\t\t{\n\t\t\tthis.counter=0;\n\t\t\t//if action is anything other than 'STANDING' change the action back to 'STANDING'\n\t\t\tthis.action = 'STANDING';\n\t\t}\n\n\t\tif(this.action == 'WALK_LEFT')\n\t\t\tthis.ch_x = this.ch_x-10;\n\t\telse if(this.action == 'WALK_RIGHT')\n\t\t\tthis.ch_x = this.ch_x+10;\n\t}\n\n\t//draws the character on the screen\n\tdrawCharacter()\n\t{\n\t\t// console.log(\"drawing character\");\n\t\tthis.updateCoordinate();\n\t\tthis.drawSprite(this.constants[this.action].y, this.constants[this.action].x[this.counter++]);\n\t}\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1580983558000
  }
}